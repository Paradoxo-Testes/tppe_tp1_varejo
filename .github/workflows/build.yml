name: Build and Analyze with SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'  # You can use any JDK distribution

      # Download JUnit and Hamcrest dependencies
      - name: Download JUnit and Hamcrest
        run: |
          mkdir -p lib
          curl -L -o lib/junit-4.12.jar https://search.maven.org/remotecontent?filepath=junit/junit/4.12/junit-4.12.jar
          curl -L -o lib/hamcrest-core-1.3.jar https://search.maven.org/remotecontent?filepath=org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar

      # Compile the project with JUnit on the classpath
      - name: Compile Project
        run: |
          mkdir -p tppe-varejo/out/production/varejo
          find tppe-varejo/src -name "*.java" > sources.txt
          javac -cp "lib/junit-4.12.jar:lib/hamcrest-core-1.3.jar" -d tppe-varejo/out/production/varejo @sources.txt

      # Run tests with JUnit using AllTests
      - name: Run Tests with JUnit
        run: |
          java -cp "lib/*:tppe-varejo/out/production/varejo" org.junit.runner.JUnitCore AllTests

      # (Optional) Generate Jacoco Report - If you are using Jacoco for coverage
      - name: Generate Jacoco Report
        run: |
          java -jar lib/jacococli.jar report jacoco.exec --classfiles tppe-varejo/out/production/varejo --sourcefiles tppe-varejo/src --html jacoco-report --xml jacoco-report.xml

      # Run SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Upload Jacoco Report as an artifact (optional)
      - name: Upload Jacoco Report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: jacoco-report.xml
