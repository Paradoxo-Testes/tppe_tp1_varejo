name: Build and Analyze with SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'  # You can use any JDK distribution

      # Compile the project
      - name: Compile Project
        run: |
          mkdir -p tppe-varejo/out/production/varejo
          javac -d tppe-varejo/out/production/varejo tppe-varejo/src/*.java

      # Run tests with JUnit and collect coverage with Jacoco
      - name: Run Tests with JUnit and Generate Coverage
        run: |
          java -javaagent:lib/jacocoagent.jar=destfile=jacoco.exec -cp "lib/*:tppe-varejo/out/production/varejo" org.junit.runner.JUnitCore <TestClasses>

      # Generate the coverage report
      - name: Generate Jacoco Report
        run: |
          java -jar lib/jacococli.jar report jacoco.exec --classfiles tppe-varejo/out/production/varejo --sourcefiles tppe-varejo/src --html jacoco-report --xml jacoco-report.xml --csv jacoco-report.csv

      # Run SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Upload Jacoco Report as an artifact (optional)
      - name: Upload Jacoco Report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: jacoco-report.xml
